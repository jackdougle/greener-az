@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* light theme background: soft light green */
    --background: 140 60% 78%;
    --pink-bg: 327 88 81;
    /* Global background gradient uses the --background and --card tokens */
    --background-gradient: linear-gradient(135deg, hsl(var(--pink-bg)) 20%, hsl(var(--green-bg)) 100%);
    --foreground: 210 40% 8%;
    --card: 130 80% 80%;
    --green-bg: 142 76% 60%; /* light pink cards in light mode */
    --card-foreground: 210 40% 8%;
    --popover: 128 80% 70%;
    --popover-foreground: 210 40% 8%;
    --primary: 210 40% 15%;
    --primary-foreground: 0 0% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 210 40% 15%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 210 40% 15%;
    --destructive: 210 84.2% 60.2%;
    --destructive-foreground: 210 40% 8%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 210 40% 15%;
    --light-accent: 327 87% 82%;
    --radius: 0.5rem;
  }
}

@layer base {
  /* Dark mode variables (Tailwind is configured for class-based dark mode) */
  :root.dark {
  --card: 109 100% 4%; /* dark gray cards in dark mode */
    --foreground: 220 40% 98%;
  /* use a dark gray background for dark mode */
  --background: 340 100% 11%; /* dark gray */
  /* gradient from slightly darker card to background */
  --background-gradient: linear-gradient(135deg, hsl(var(--card)) 0%, hsl(var(--background)) 100%);
    --card-foreground: 210 40% 98%;
  --popover: 340 100% 11%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 60%;
    --primary-foreground: 210 40% 10%;
    --secondary: 215 10% 18%;
    --secondary-foreground: 210 40% 98%;
    --muted: 220 8% 16%;
    --muted-foreground: 210 40% 78%;
    --accent: 210 40% 14%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 216 12% 18%;
    --input: 216 12% 14%;
    --ring: 200 100% 60%;
    --light-accent: 335 77% 42%;
    --radius: 0.5rem;
  }

  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  
   /* Chat scrollbar styling for the chatbot history */
   .chat-scrollbar {
     /* default for modern browsers */
     scrollbar-width: thin;
     scrollbar-color: rgba(236, 72, 153, 0.7) rgba(134, 239, 172, 0.6);
   }
   
   .chat-scrollbar::-webkit-scrollbar {
     width: 8px;
   }
   .chat-scrollbar::-webkit-scrollbar-track {
     background: rgba(134, 239, 172, 0.2);
     border-radius: 8px;
   }
   .chat-scrollbar::-webkit-scrollbar-thumb {
     background-color: rgba(236, 72, 153, 0.7);
     border-radius: 8px;
     border: 2px solid rgba(134, 239, 172, 0.15);
   }
}

/* Typing / thinking indicator for chatbot */
.typing-bubble {
  display: inline-flex;
  align-items: center;
  gap: 6px;
}
.typing-dots {
  width: 36px;
  height: 18px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.typing-dots span {
  display: block;
  width: 6px;
  height: 6px;
  background: rgba(34, 197, 94, 0.8);
  border-radius: 9999px;
  opacity: 0.3;
  transform: translateY(0);
  animation: typing-dot 1s infinite ease-in-out;
}
.typing-dots span:nth-child(2) { animation-delay: 0.15s }
.typing-dots span:nth-child(3) { animation-delay: 0.3s }

@keyframes typing-dot {
  0%, 60%, 100% { opacity: 0.3; transform: translateY(0) }
  30% { opacity: 1; transform: translateY(-6px) }
}

/* Component layer: make main panels slightly translucent/see-through */
@layer components {
  :root {
    /* default panel alpha (0 - 1). Tweak this to increase/decrease translucency */
    --panel-alpha: 0.75;
    /* default panel border color: dark green */
    --panel-border: 142 45% 60%;
    /* map tint control: alpha for the green overlay (subtle by default) */
    --map-tint-alpha: 0.09;

    /* Special card colors for Clean Energy Impact */
    --clean-energy-bg: 142 76% 95%;
    --clean-energy-border: 142 76% 80%;

    /* Special card colors for Reduce Your Impact */
    --reduce-impact-bg: 210 100% 97%;
    --reduce-impact-border: 210 100% 85%;

    /* Special card colors for Opportunities */
    --opportunities-bg: 220 100% 97%;
    --opportunities-border: 322 90% 90%;

    /* Special card colors for Arizona Tips/Info */
    --arizona-tips-bg: 200 100% 97%;
    --arizona-tips-border: 200 100% 85%;
  }

  :root.dark {
    /* slightly different alpha in dark mode for better contrast */
    --panel-alpha: 0.7;
    /* slightly brighter green for dark mode so border reads on dark backgrounds */
    --panel-border: 340 100% 8%;
    --map-tint-alpha: 0.15;

    /* Special card colors for dark mode - remove blue tints */
    --clean-energy-bg: 142 60% 15%;
    --clean-energy-border: 142 60% 25%;

    --reduce-impact-bg: 327 60% 20;
    --reduce-impact-border: 340 60% 25%;

    --opportunities-bg: 327 60% 20;
    --opportunities-border: 327 60% 25%;

    --arizona-tips-bg: 327 60% 15%;
    --arizona-tips-border: 327 60% 25%;
  }

  /* Override Tailwind-generated utility colors for card/popover to include alpha.
     We use !important so these overrides take precedence over the generated bg-* rules.
     This makes all elements using bg-card or bg-popover slightly transparent. */
  .bg-card {
    background-color: hsl(var(--card) / var(--panel-alpha)) !important;
    -webkit-backdrop-filter: blur(6px);
    backdrop-filter: blur(6px);
    border: 2px solid hsl(var(--panel-border)) !important;
  }

  .bg-popover {
    background-color: hsl(var(--popover) / var(--panel-alpha)) !important;
    -webkit-backdrop-filter: blur(6px);
    backdrop-filter: blur(6px);
    border: 2px solid hsl(var(--panel-border)) !important;
  }

  /* Also cover any components that may set explicit class names */
  .card,
  .popover,
  .panel {
    background-color: hsl(var(--card) / var(--panel-alpha)) !important;
    border: 2px solid hsl(var(--panel-border)) !important;
  }

  /* map tint overlay using pseudo-element to avoid extra DOM nodes in JSX */
  .map-tint {
    position: relative;
  }
  .map-tint::after {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    /* simple solid green overlay to tint the tiles */
    mix-blend-mode: normal; /* avoid unpredictable color math */
    background: rgba(226, 29, 112, var(--map-tint-alpha)); /* subtle green overlay */
    /* sit above tiles (tilePane ~200) but below markers/popups (markerPane ~600) */
    z-index: 450;
  }

  /* Dark mode overlay - use a more subtle dark tint */
  :root.dark .map-tint::after {
    background: rgba(226, 29, 112, 0.07); /* very subtle dark blue overlay for dark mode */
  }

  /* Force Leaflet tile images to be shifted green in light mode. Using !important
     to ensure the filter takes effect over any inline styles produced by Leaflet. */
  .map-tint .leaflet-tile {
    transition: filter 220ms linear;
  }

  /* Light mode: push tiles toward a bright green */
  :root .map-tint .leaflet-tile {
    /* milder hue shift for a gentle green tint */
    filter: hue-rotate(60deg) saturate(1.12) brightness(1) !important;
  }

  /* Dark mode: enhance dark tiles for better contrast and subtle tinting */
  :root.dark .map-tint .leaflet-tile {
    filter: brightness(1.1) contrast(1.05) saturate(0.8) !important;
  }

  /* Leaflet tooltip styling for dark mode */
  :root.dark .leaflet-tooltip {
    background-color: #0b1d10 !important;
    border: 1px solid #1a291e !important;
    color: #ffffff !important;
  }

  :root.dark .leaflet-tooltip-top:before {
    border-top-color: #1a291e !important;
  }

  :root.dark .leaflet-tooltip-bottom:before {
    border-bottom-color: #1a291e !important;
  }

  :root.dark .leaflet-tooltip-left:before {
    border-left-color: #1a291e !important;
  }

  :root.dark .leaflet-tooltip-right:before {
    border-right-color: #1a291e !important;
  }
}

@layer utilities {
  /* Fade in animations */
  .fade-in {
    animation: fadeIn 0.6s ease-out forwards;
    opacity: 0;
  }

  .fade-in-up {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
    transform: translateY(20px);
  }

  .fade-in-scale {
    animation: fadeInScale 0.7s ease-out forwards;
    opacity: 0;
    transform: scale(0.95);
  }

  .slide-in-right {
    animation: slideInRight 0.8s ease-out forwards;
    opacity: 0;
    transform: translateX(30px);
  }

  .slide-in-left {
    animation: slideInLeft 0.8s ease-out forwards;
    opacity: 0;
    transform: translateX(-30px);
  }

  /* Staggered animations */
  .stagger-1 { animation-delay: 0.1s; }
  .stagger-2 { animation-delay: 0.2s; }
  .stagger-3 { animation-delay: 0.3s; }
  .stagger-4 { animation-delay: 0.4s; }
  .stagger-5 { animation-delay: 0.5s; }
  .stagger-6 { animation-delay: 0.6s; }

  /* Hover effects */
  .hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  .hover-scale {
    transition: transform 0.2s ease;
  }

  .hover-scale:hover {
    transform: scale(1.05);
  }

  .hover-glow {
    transition: box-shadow 0.3s ease;
  }

  .hover-glow:hover {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
  }

  /* Pulse animation for live indicators */
  .pulse-soft {
    animation: pulseSoft 2s ease-in-out infinite;
  }

  /* Smooth transitions */
  .transition-smooth {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .transition-bounce {
    transition: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

/* Keyframe animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulseSoft {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.6;
  }
}